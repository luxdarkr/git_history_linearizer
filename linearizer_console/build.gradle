apply plugin: 'java'
sourceCompatibility = 11
targetCompatibility = 11

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://repo.eclipse.org/content/groups/releases/"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // JGit
    implementation 'org.eclipse.jgit:org.eclipse.jgit:5.10.0.202012080955-r'
    implementation 'org.eclipse.jgit:org.eclipse.jgit.archive:5.10.0.202012080955-r'
    implementation 'org.eclipse.jgit:org.eclipse.jgit.ssh.jsch:5.10.0.202012080955-r'
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'org.slf4j:slf4j-simple:1.7.30'

    // optional dependency of commons-compress which is needed by JGit
    implementation 'org.tukaani:xz:1.8'

    // https://mvnrepository.com/artifact/args4j/args4j
    compile group: 'args4j', name: 'args4j', version: '2.33'


    implementation project(':linearizer_core')
}

jar {
    archivesBaseName = 'Linearizer'
    archiveVersion = ''
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'console.Main'
        )
    }
    from ({
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
}
